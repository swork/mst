Impulser accepts Click, serial line interrupt, timing system impulse,
whatever and logs a finish time impulse. On receipt of update notice,
adds recent activity to running update view.

Scanner accepts bib numbers or notice placards ('999' etc.),
logs. IFF COMPLETELY UNAMBIGUOUS, MIGHT match next finish impulse and
broadcast an update notice.

Editor handles matchup of ambiguous cases.

"Sequel Pro" is ad-hoc database manipulator, let's be careful out
there.


All TODO

A Update ERROR and EMPTY flags to bar-code-card values.

B There's a risk of a race between editor and scanner on saving on
  sync: namely, editor makes assignment and sprays Notify but scanner
  does save cycle after editor's assignment but before handling
  Notify. Same impulse assigned to different scans, for eg.

C Microseconds field in db should be called 'usecs', not 'ms'

C HD camera on start for bib verification, in case of questions?

A [Done] All times manipulated as naive datetime.datetime values in local TZ,
  and stored as db datetimes with separate ms field.  FULL DATES.
A [Done] Can't order by impulse.id: DuplicateImpulse screws this up, as it
  can be done after other impulses have come in.
A [Done] Db.Scan's backref is order_by=id -- what impact this? Should be
  "none" as multiple scans for the same impulse aren't possible (I
  think) as impulses.id is a ForeignKey constraint on Scan and a primary
  key (so unique) on Impulse. Check though...
B [Done] Explore caching GetAttr results by row (exposed Python bug when tried!)
A [done] Review fetchall(), fetchmany() and fetchone() results objects, avoid
  positional notation.
B [done] Broadcast notifier for updates
B [done] Q for Charlie: finish corral handling of multi-lap
  competitors (answer: scan them; do all calcs off latest impulse/scan)
A [done] Database - new table for "group start times", from which participant
  column for start time is drawn (and overridden in the DB as
  necessary). "100", "Comp", "Rec", "RecF", "SR"
A [done] Option mechanism - command line or env vars (config file)
A [done] BUG Impulser/scanner don't reflect assignments made in editor, implying
  WORSE BUG 999 scan may trash assignments made in editor. Resolved by
  removing already-assigned scans and impulses from this display.
AA [reconnects OK] DB server connections went away overnight:
  sqlalchemy.exc.OperationalError. THEN, while researching
  timeouts/reconnection, it started working again... Server itself
  seemed to be OK all along, SequelPro worked fine, but my programs ran
  this exception to outer level. Some time later these same instances
  could log OK, so it looks like reconnection happens automatically when
  noticed. Maybe a "Refresh" choice in the menus would be smart, or a
  small query every few minutes or so?
A [done] Integration with registration: minimal "entries" table: bib, name,
  startkey; starttod; finishtod (latest impulse matched with bib), totaltime
  (difference). Export that and provide a lookup function off bib.
A [done] A little shorter window for Dell Mini
 

Editor TODO

A Report places need to handle ties

A Overall finish places on all rows, must be in DB for categories
  report. Print as string, 'NT' for None/NULL

A Edit times out-of-band and validate correct sorting etc.

A OK, allow assigning scan to impulse across EMPTY - but confirm.

B Lose notion of "save", "dirty", etc. - just Refresh

B Context-menu items into regular menus too

B Validations: no impulses.erased assigned to scans, no impulses
assigned to scans, no scans unassigned, ID multiple impulses
on one bib (laps), no impulses assigned to earlier scans, impulsetime
and scantime too far apart to be real, more? 

A Edit in table

C Save, track needs save; not sure SetCellValue works in all (any)
cases. See editor.py SaveNewValue for eg

C Undo/Redo: List of bibs for undo, list of broken assignments for redo,
and insert/delete.  impulses.erased

A [done] Row labels are impulse_id or scan_id for scan-only lines.
B [done] Run over MySQL
C [wontdo] On tableresults retrieve -- Consider interleave via sort after fetch.
A [done] Honor impulses.erased, add to operations
B [done] No need to see dates
A [done] Disallow assigning across "empty corral" marker
A [done] Why is Overall missing?
A [wontdo] Can't use "create temporary table finishes" syntax, check
  ExecutionContext/cursor.
A [done] DNF (NULL) - check OK. (Col in entries, manual set only;
  queries.Actions.CheckFindFinish checks it.)
A [done] Queries: Set Start Times From Groups Table. Set Finish Times From
  Time Differences.  
A [done] ms field in entries; comes straight from impulses, no calcs needed.
A [done] Cut report list down to Charlie's list (2 menu choices, 1 for full)


Impulser TODO

A ERASE THIS IMPULSE didn't work? Not done?  (Eliminate it?)

C Explore "RegisterHotKey" as a way to catch every possible impulse
  key when app is running

A [done] impulses.erased column, click on row to set it (and disappear row)
B [done] No need to see dates
C [done] Sizing: column widths follow contents, initial window width follows
columns, subsequent column widths follow window width proportionately.
A [done] Log entries to a local CSV for disaster recovery
B [done] Red close button needs to hit confirmation dialog too


Scanner TODO

A Config option to turn off automatic assignment on empty corral

B Refresh in menu (debug, too likely we'll want it in production)

B Delete key on bib number to kill it (???)

B Keystrokes in grid go to text field (???)

C Explore "RegisterHotKey" as a way to catch every possible bibscan
key when app is running

C Truncate impulsetime fractional seconds, by option


A [done] Don't assign if scanned > 5m after impulse
B [done] Catch Enter on empty field
B [done] Label on text field
B [done] Include scan time in tables
A [done] BC notify on change
AA [done] Don't assign anything (unassign) if error flag scanned
AA [done] Assign new bibs to EARLIEST impulse since empty, not latest
AA [done] Record assignments on EMPTY scan (add scans.impulse to table;
   matches obvious)


